import { cjsRequire } from '../helpers.js';
import { base } from './base.js';
const overrides = [
    {
        files: ['*.md', '*.mdx'],
        extends: 'plugin:mdx/overrides',
        ...base,
    },
    {
        files: '**/*.{md,mdx}/**',
        extends: 'plugin:mdx/code-blocks',
    },
];
export const recommended = {
    overrides,
};
const addPrettierRules = () => {
    try {
        cjsRequire.resolve('prettier');
        const { meta } = cjsRequire('eslint-plugin-prettier');
        const version = meta?.version || '';
        const [major, minor, patch] = version.split('.');
        if (+major > 5 ||
            (+major === 5 &&
                (+minor > 1 || (+minor === 1 && Number.parseInt(patch) >= 2)))) {
            return;
        }
        overrides.push({
            files: '*.md',
            rules: {
                'prettier/prettier': [
                    'error',
                    {
                        parser: 'markdown',
                    },
                ],
            },
        }, {
            files: '*.mdx',
            rules: {
                'prettier/prettier': [
                    'error',
                    {
                        parser: 'mdx',
                    },
                ],
            },
        });
    }
    catch { }
};
addPrettierRules();
//# sourceMappingURL=recommended.js.map